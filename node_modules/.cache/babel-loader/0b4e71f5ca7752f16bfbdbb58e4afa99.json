{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/MyAccount.js\";\nimport React, { Component } from 'react';\nimport Nav from './Nav';\nimport UserSignUp from \"./UserSignUp\";\nimport { BASE_URL } from \"../../src/config\";\nimport { BASE_URL_FRONTEND } from \"../../src/config\";\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\ncookies.set('token', '', {\n  path: '/'\n});\n\nclass MyAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isBoxVisible: false,\n      username: \"\",\n      password: \"\"\n    };\n\n    this.BetaVersionPopUp = e => {\n      e.preventDefault();\n      this.setState({\n        isBoxVisible: true\n      });\n    };\n\n    this.closeWindow = () => {\n      this.setState({\n        isBoxVisible: false\n      });\n    };\n\n    this.signIn = e => {\n      e.preventDefault();\n      fetch(BASE_URL + '/users/checkuser/' + this.state.username, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: this.state.password\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) window.location.href = BASE_URL_FRONTEND + \"/\" + this.state.username + \"/dashboard\";\n      }).catch(err => alert(err));\n    };\n  }\n\n  setForm(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(value);\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    let signUp = new UserSignUp();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-page\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        pageType: 'interior'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `box beta-version-box ${this.state.isBoxVisible ? \"\" : \"hidden\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Since this is still the Beta version of the app, you cannot update account information. Please check back soon to be able to sign-up and update your account whenever!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.closeWindow,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"update-account-form\",\n        onSubmit: e => this.signIn(e),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter your username and password to SignIn.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"user123\",\n            type: \"username\",\n            name: \"username\",\n            id: \"username\",\n            required: true,\n            onChange: e => this.setForm(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"*******\",\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            required: true,\n            onChange: e => this.setForm(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default MyAccount;","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/MyAccount.js"],"names":["React","Component","Nav","UserSignUp","BASE_URL","BASE_URL_FRONTEND","Cookies","cookies","set","path","MyAccount","state","isBoxVisible","username","password","BetaVersionPopUp","e","preventDefault","setState","closeWindow","signIn","fetch","method","headers","body","JSON","stringify","then","response","json","window","location","href","catch","err","alert","setForm","name","value","target","console","log","render","signUp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Nav from './Nav';\nimport UserSignUp from \"./UserSignUp\";\nimport {BASE_URL} from \"../../src/config\";\nimport {BASE_URL_FRONTEND} from \"../../src/config\";\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\ncookies.set('token', '', { path: '/' });\n\nclass MyAccount extends Component{\n    state = {\n        isBoxVisible:false,\n        username: \"\",\n        password: \"\"\n    }\n    BetaVersionPopUp=(e)=>{\n        e.preventDefault();\n        this.setState({ isBoxVisible: true });\n    }\n    closeWindow=()=>{\n        this.setState({ isBoxVisible: false });\n    } \n    setForm(e)\n   {\n    const {name, value} = e.target;\n    console.log(value);\n    this.setState({\n        [name] : value\n    });\n   }\n    signIn = (e) =>  { \n        e.preventDefault();\n        fetch(BASE_URL+'/users/checkuser/'+this.state.username, {\n          method:'post',\n          headers:{'Content-Type' : 'application/json'},\n          body:JSON.stringify({\n            password: this.state.password \n          })\n        })\n        .then(response=> response.json())\n        .then(response=>{\n            if(response) window.location.href = BASE_URL_FRONTEND+\"/\"+this.state.username+\"/dashboard\";\n        })\n        .catch(err=> alert(err))\n    }   \n    render(){      \n        let signUp = new UserSignUp(); \n        return(\n          <div className=\"account-page\">\n            <Nav pageType={'interior'}/>\n              <div className={`box beta-version-box ${this.state.isBoxVisible ? \"\" : \"hidden\"}`}>\n              <p>Since this is still the Beta version of the app, you cannot update account information. Please check back soon to be able to sign-up and update your account whenever!</p>\n              <button className=\"button\" onClick={this.closeWindow}>Close</button>\n              </div>             \n                <form className=\"update-account-form\" onSubmit={e=>this.signIn(e)}>\n                    <h2>My Account</h2>                    \n                    <p>Please enter your username and password to SignIn.</p>\n                    \n                    <div className=\"form-field-group\">\n                        <label htmlFor=\"username\">UserName</label>\n                        <input placeholder=\"user123\" type=\"username\" name='username' id='username' required onChange={(e)=>this.setForm(e)}/>\n                    </div>\n                    <div className=\"form-field-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input placeholder=\"*******\" type=\"password\" name='password' id='password' required onChange={(e)=>this.setForm(e)}/>\n                    </div>\n                    <button type=\"submit\">SignIn</button>                    \n                   </form> \n                                                 \n            </div>\n        )\n    }\n}\nexport default MyAccount;"]},"metadata":{},"sourceType":"module"}