{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/SinglePost.js\";\nimport React, { Component } from 'react';\nimport '../libraries/fontawesome.js';\nimport '../_styles/posts.css';\nimport DeletePost from './DeletePost';\nimport AddBookmark from './AddBookmark';\nimport UpdateBookmark from './UpdateBookmark';\nimport Context from '../Context';\nimport { isCurrentlyBookmarked } from '../Functions/FilterResults';\nimport DeleteBookmark from './DeleteBookmark';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { faHeartbeat, faPodcast, faBookOpen, faSeedling } from '@fortawesome/free-solid-svg-icons';\n\nclass SinglePost extends Component {\n  render() {\n    const {\n      post_id,\n      post_type,\n      title,\n      by,\n      link,\n      content,\n      username,\n      bookmark_content,\n      bookmark_id,\n      image_path\n    } = this.props;\n    const currentUserId = this.context.currentUserInfo.user_id; //const allPostInfo = this.props.postInfo;\n\n    let listItem = '';\n    let button = '';\n    let form = '';\n    let uploadedImage = '';\n    let bookmarkButton = '';\n    let icon = '';\n    let bookmarked = false;\n\n    if (post_type === 'lifestyle') {\n      icon = faHeartbeat;\n    } else if (post_type === 'event') {\n      icon = faCalendarAlt;\n    } else if (post_type === 'recipe') {\n      icon = faSeedling;\n    } else if (post_type === 'podcast') {\n      icon = faPodcast;\n    } else if (post_type === 'book') {\n      icon = faBookOpen;\n    }\n\n    let currentUser = this.context.currentUserInfo.username;\n    bookmarked = isCurrentlyBookmarked(post_id, this.context.bookmarks); //let currentDisplay= this.context.currentDisplay;   \n\n    if (this.props.postsToDisplay === 'bookmarks') {\n      bookmarkButton = /*#__PURE__*/_jsxDEV(DeleteBookmark, {\n        bookmarkId: bookmark_id,\n        postId: post_id,\n        currentUserId: currentUserId,\n        push: this.props.history.push,\n        displayType: this.props.postsToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    } else if (this.props.postsToDisplay === 'posts' && bookmarked) {\n      bookmarkButton = /*#__PURE__*/_jsxDEV(DeleteBookmark, {\n        bookmarkId: bookmarked,\n        postId: post_id,\n        currentUserId: currentUserId,\n        push: this.props.history.push,\n        displayType: this.props.postsToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } else {\n      bookmarkButton = /*#__PURE__*/_jsxDEV(AddBookmark, {\n        postId: post_id //allPostInfo={allPostInfo}\n        ,\n        currentUserId: currentUserId,\n        push: this.props.history.push\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (username === currentUser) {\n      button = /*#__PURE__*/_jsxDEV(DeletePost, {\n        postId: post_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this);\n    }\n\n    if (image_path) {\n      uploadedImage = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-span post-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_path,\n          alt: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this);\n    }\n\n    if (this.props.postsToDisplay === 'bookmarks') {\n      bookmarkButton = /*#__PURE__*/_jsxDEV(DeleteBookmark, {\n        bookmarkId: bookmark_id,\n        postId: post_id,\n        currentUserId: currentUserId,\n        push: this.props.history.push\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    } else {\n      bookmarkButton = /*#__PURE__*/_jsxDEV(AddBookmark, {\n        postId: post_id //allPostInfo={allPostInfo}\n        ,\n        currentUserId: currentUserId,\n        push: this.props.history.push\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (username === currentUser) {\n      button = /*#__PURE__*/_jsxDEV(DeletePost, {\n        postId: post_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }, this);\n    }\n\n    if (this.props.postsToDisplay === 'bookmarks') {\n      form = /*#__PURE__*/_jsxDEV(UpdateBookmark, {\n        bookmark_content: bookmark_content,\n        bookmark_id: bookmark_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (image_path) {\n      uploadedImage = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-span post-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_path,\n          alt: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }, this);\n    }\n\n    listItem = /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `single-post ${post_type}-post ${bookmarked ? \"bookmarked\" : \"not-bookmarked\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-span post-icon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-span post-username\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), uploadedImage, title ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-span post-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 30\n        }, this) : \"\", by ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-span post-artist\",\n          children: by\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 27\n        }, this) : \"\", content ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-span post-content\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }, this) : \"\", link ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-span post-link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link,\n            children: \"Link to listen or learn more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-icons-buttons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), button, form]\n    }, this.props.post_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }, this);\n    return listItem;\n  }\n\n}\n\nSinglePost.contextType = Context;\nSinglePost.defaultProps = {\n  history: {\n    goBack: () => {}\n  },\n  match: {\n    params: {}\n  }\n};\nexport default SinglePost;","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/SinglePost.js"],"names":["React","Component","DeletePost","AddBookmark","UpdateBookmark","Context","isCurrentlyBookmarked","DeleteBookmark","FontAwesomeIcon","faCalendarAlt","faHeartbeat","faPodcast","faBookOpen","faSeedling","SinglePost","render","post_id","post_type","title","by","link","content","username","bookmark_content","bookmark_id","image_path","props","currentUserId","context","currentUserInfo","user_id","listItem","button","form","uploadedImage","bookmarkButton","icon","bookmarked","currentUser","bookmarks","postsToDisplay","history","push","contextType","defaultProps","goBack","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../libraries/fontawesome.js';\nimport '../_styles/posts.css';\nimport DeletePost from'./DeletePost';\nimport AddBookmark from './AddBookmark'\nimport UpdateBookmark from './UpdateBookmark'\nimport Context from '../Context';\nimport { isCurrentlyBookmarked } from '../Functions/FilterResults'\nimport DeleteBookmark from './DeleteBookmark';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport {faHeartbeat, faPodcast, faBookOpen, faSeedling } from '@fortawesome/free-solid-svg-icons';\n\nclass SinglePost extends Component{\n    static contextType=Context;\n    static defaultProps = {\n        history: {\n          goBack: () => { }\n        },\n        match: {\n          params: {}\n        }\n      }\n    render(){\n        const{post_id, post_type, title, by, link, content, username, bookmark_content, bookmark_id, image_path} = this.props;\n        const currentUserId = this.context.currentUserInfo.user_id;\n        //const allPostInfo = this.props.postInfo;\n        let listItem ='';\n        let button ='';\n        let form ='';\n        let uploadedImage ='';\n        let bookmarkButton ='';\n        let icon ='';\n        let bookmarked = false;\n\n        if(post_type==='lifestyle'){\n            icon = faHeartbeat\n        }\n        else if(post_type==='event'){\n            icon = faCalendarAlt\n        }\n        else if(post_type==='recipe'){\n            icon = faSeedling\n        }\n        else if(post_type==='podcast'){\n            icon = faPodcast\n        }\n        else if(post_type==='book'){\n            icon = faBookOpen\n        }\n        let currentUser = this.context.currentUserInfo.username;\n        bookmarked = isCurrentlyBookmarked(post_id, this.context.bookmarks);\n        //let currentDisplay= this.context.currentDisplay;   \n        if(this.props.postsToDisplay ==='bookmarks' ){\n            bookmarkButton = \n                <DeleteBookmark\n                    bookmarkId={bookmark_id}\n                    postId={post_id}\n                    currentUserId ={currentUserId}\n                    push={this.props.history.push}\n                    displayType = {this.props.postsToDisplay}/>                                        \n        } \n        else if(this.props.postsToDisplay ==='posts' && bookmarked){\n            bookmarkButton = \n                <DeleteBookmark\n                    bookmarkId={bookmarked}\n                    postId={post_id}\n                    currentUserId ={currentUserId}\n                    push={this.props.history.push}\n                    displayType = {this.props.postsToDisplay}/>  \n        }\n        else{\n            bookmarkButton = \n                <AddBookmark\n                    postId={post_id}\n                    //allPostInfo={allPostInfo}\n                    currentUserId ={currentUserId}\n                    push={this.props.history.push}/>\n        }\n        if(username===currentUser){\n            button = <DeletePost\n                        postId={post_id}/>\n        }\n        if(image_path){\n            uploadedImage = <span className=\"post-span post-image\"><img src={image_path} alt={content}/></span>\n        }          \n\n        if(this.props.postsToDisplay ==='bookmarks'){\n            bookmarkButton = \n                <DeleteBookmark\n                    bookmarkId={bookmark_id}\n                    postId={post_id}\n                    currentUserId ={currentUserId}\n                    push={this.props.history.push}\n                />  \n                                       \n        }\n        else{\n            bookmarkButton = \n                <AddBookmark\n                    postId={post_id}\n                    //allPostInfo={allPostInfo}\n                    currentUserId ={currentUserId}\n                    push={this.props.history.push}\n                />\n        }\n        if(username===currentUser){\n            button = <DeletePost\n                        postId={post_id}/>\n        }\n        if(this.props.postsToDisplay==='bookmarks'){\n            form = <UpdateBookmark \n                        bookmark_content={bookmark_content}\n                        bookmark_id={bookmark_id}/>\n        }\n        if(image_path){\n          uploadedImage = <span className=\"post-span post-image\"><img src={image_path} alt={content}/></span>\n        }\n        listItem = (<li className={`single-post ${post_type}-post ${bookmarked ? \"bookmarked\" : \"not-bookmarked\"}`} key={this.props.post_id}>\n               <div className=\"post-info\">\n                    <span className=\"post-span post-icon\"><FontAwesomeIcon icon={icon} /></span>\n                    <div className=\"user-info\">\n                    <span className=\"post-span post-username\">{username}</span> \n                    </div> \n                    {uploadedImage}  \n                    {title ? <span className=\"post-span post-title\">{title}</span> :\"\"}\n                    {by ? <span className=\"post-span post-artist\">{by}</span> :\"\"}\n                    {content ? <span className=\"post-span post-content\">{content}</span> :\"\"}\n                    {link ? <span className=\"post-span post-link\"><a href={link}>Link to listen or learn more</a></span> : \"\"}\n                    \n                </div>\n                <div className=\"post-icons-buttons\">\n              \n                </div>\n                {button}\n                {form}\n            </li>)\n    \n        return(listItem)    \n}\n}\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}